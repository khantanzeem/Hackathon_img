{"ast":null,"code":"var _jsxFileName = \"/Users/abdulkhan/Desktop/visualStudio/dalle-master/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { InputBox } from \"./InputBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configuration = new Configuration({\n  apiKey: process.env.REACT_APP_API_KEY\n});\nconst openai = new OpenAIApi(configuration);\nfunction App() {\n  _s();\n  const [userPrompt, setUserPrompt] = useState(\"\");\n  const [number, setNumber] = useState(1);\n  const [size, setSize] = useState(\"256x256\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const generateImage = async () => {\n    const imageParameters = {\n      prompt: userPrompt,\n      n: parseInt(number),\n      size: size\n    };\n    const response = await openai.createImage(imageParameters);\n    const urlData = response.data.data[0].url;\n    setImageUrl(urlData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      className: \"image\",\n      alt: \"ai thing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      label: \"Description\",\n      setAttribute: setUserPrompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      label: \"Amount\",\n      setAttribute: setNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      label: \"Size\",\n      setAttribute: setSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"main-button\",\n      onClick: () => generateImage(),\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RwHRR6oE5174cg03OngHcqt8TjY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","InputBox","configuration","apiKey","process","env","REACT_APP_API_KEY","openai","App","userPrompt","setUserPrompt","number","setNumber","size","setSize","imageUrl","setImageUrl","generateImage","imageParameters","prompt","n","parseInt","response","createImage","urlData","data","url"],"sources":["/Users/abdulkhan/Desktop/visualStudio/dalle-master/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { InputBox } from \"./InputBox\";\n\nconst configuration = new Configuration({\n  apiKey: process.env.REACT_APP_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n\nfunction App() {\n  const [userPrompt, setUserPrompt] = useState(\"\");\n  const [number, setNumber] = useState(1);\n  const [size, setSize] = useState(\"256x256\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const generateImage = async () => {\n    const imageParameters = {\n      prompt: userPrompt,\n      n: parseInt(number),\n      size: size,\n    };\n    const response = await openai.createImage(imageParameters);\n    const urlData = response.data.data[0].url;\n    setImageUrl(urlData);\n  };\n\n  return (\n    <main className=\"App\">\n      {imageUrl && <img src={imageUrl} className=\"image\" alt=\"ai thing\" />}\n      <InputBox label={\"Description\"} setAttribute={setUserPrompt} />\n      <InputBox label={\"Amount\"} setAttribute={setNumber} />\n      <InputBox label={\"Size\"} setAttribute={setSize} />\n      <button className=\"main-button\" onClick={() => generateImage()}>\n        Generate\n      </button>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,SAASC,QAAQ,QAAQ,YAAY;AAAC;AAEtC,MAAMC,aAAa,GAAG,IAAIH,aAAa,CAAC;EACtCI,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;AACtB,CAAC,CAAC;AACF,MAAMC,MAAM,GAAG,IAAIP,SAAS,CAACE,aAAa,CAAC;AAE3C,SAASM,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMmB,aAAa,GAAG,YAAY;IAChC,MAAMC,eAAe,GAAG;MACtBC,MAAM,EAAEV,UAAU;MAClBW,CAAC,EAAEC,QAAQ,CAACV,MAAM,CAAC;MACnBE,IAAI,EAAEA;IACR,CAAC;IACD,MAAMS,QAAQ,GAAG,MAAMf,MAAM,CAACgB,WAAW,CAACL,eAAe,CAAC;IAC1D,MAAMM,OAAO,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;IACzCV,WAAW,CAACQ,OAAO,CAAC;EACtB,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,KAAK;IAAA,WAClBT,QAAQ,iBAAI;MAAK,GAAG,EAAEA,QAAS;MAAC,SAAS,EAAC,OAAO;MAAC,GAAG,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACpE,QAAC,QAAQ;MAAC,KAAK,EAAE,aAAc;MAAC,YAAY,EAAEL;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/D,QAAC,QAAQ;MAAC,KAAK,EAAE,QAAS;MAAC,YAAY,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACtD,QAAC,QAAQ;MAAC,KAAK,EAAE,MAAO;MAAC,YAAY,EAAEE;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAClD;MAAQ,SAAS,EAAC,aAAa;MAAC,OAAO,EAAE,MAAMG,aAAa,EAAG;MAAA,UAAC;IAEhE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX;AAAC,GA5BQT,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}